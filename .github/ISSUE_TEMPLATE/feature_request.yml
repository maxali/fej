name: Feature Request
description: Suggest a new feature or enhancement for fej
title: "[Feature]: "
labels: ["enhancement", "needs-triage"]
assignees: []

body:
  - type: markdown
    attributes:
      value: |
        Thanks for suggesting a new feature! Please provide as much detail as possible.

  - type: checkboxes
    id: prerequisites
    attributes:
      label: Prerequisites
      description: Please confirm the following before submitting
      options:
        - label: I have searched existing issues to ensure this feature hasn't been requested
          required: true
        - label: I have read the [documentation](https://github.com/maxali/fej#readme)
          required: true
        - label: This feature would benefit the broader fej community (not just my specific use case)
          required: false

  - type: dropdown
    id: feature-type
    attributes:
      label: Feature Type
      description: What type of feature are you requesting?
      options:
        - New API method
        - Built-in middleware
        - Developer experience improvement
        - Performance enhancement
        - Documentation improvement
        - Testing improvement
        - TypeScript enhancement
        - Other (please specify in description)
    validations:
      required: true

  - type: textarea
    id: problem
    attributes:
      label: Problem Statement
      description: What problem does this feature solve? Is your feature request related to a problem?
      placeholder: "I'm always frustrated when..."
    validations:
      required: true

  - type: textarea
    id: solution
    attributes:
      label: Proposed Solution
      description: Describe the solution you'd like to see
      placeholder: "I would like to see..."
    validations:
      required: true

  - type: textarea
    id: api-design
    attributes:
      label: Proposed API Design
      description: If applicable, provide a code example showing how this feature would be used
      placeholder: |
        ```typescript
        import { Fej } from 'fej';

        const fej = new Fej();

        // Example usage of the proposed feature
        fej.newFeature(...);
        ```
      render: typescript

  - type: textarea
    id: alternatives
    attributes:
      label: Alternatives Considered
      description: Describe any alternative solutions or features you've considered
      placeholder: "I've considered..."

  - type: textarea
    id: workaround
    attributes:
      label: Current Workaround
      description: If applicable, describe how you're currently working around this limitation
      placeholder: |
        ```typescript
        // Current workaround
        ```
      render: typescript

  - type: dropdown
    id: priority
    attributes:
      label: Priority
      description: How important is this feature to you?
      options:
        - "Critical (blocking my use of fej)"
        - "High (would significantly improve my workflow)"
        - "Medium (nice to have)"
        - "Low (minor improvement)"
    validations:
      required: true

  - type: textarea
    id: use-cases
    attributes:
      label: Use Cases
      description: Describe specific use cases where this feature would be helpful
      placeholder: |
        1. Use case 1: ...
        2. Use case 2: ...
        3. Use case 3: ...
    validations:
      required: true

  - type: textarea
    id: breaking-changes
    attributes:
      label: Breaking Changes
      description: Would this feature require breaking changes to the existing API?
      placeholder: "Yes/No - explanation..."

  - type: textarea
    id: additional-context
    attributes:
      label: Additional Context
      description: Add any other context, screenshots, or examples about the feature request

  - type: checkboxes
    id: contribution
    attributes:
      label: Contribution
      description: Are you willing to help implement this feature?
      options:
        - label: I am willing to submit a PR to implement this feature
        - label: I need help implementing this but can provide testing/feedback
